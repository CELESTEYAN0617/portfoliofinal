{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\portfolio-site\\\\src\\\\components\\\\InteractiveLines.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport Stats from \"three/examples/jsm/libs/stats.module\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveLines = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    let container;\n    let camera;\n    let scene;\n    let raycaster;\n    let renderer;\n    let parentTransform;\n    let stats;\n    let theta = 0;\n    const pointer = new THREE.Vector2();\n    const radius = 100;\n    const onPointerMove = event => {\n      pointer.x = event.clientX / window.innerWidth * 2 - 1;\n      pointer.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    const animate = () => {\n      requestAnimationFrame(animate);\n      render();\n      stats.update();\n    };\n    const render = () => {\n      theta += 0.1;\n      camera.position.x = radius * Math.sin(THREE.MathUtils.degToRad(theta));\n      camera.position.y = radius * Math.sin(THREE.MathUtils.degToRad(theta));\n      camera.position.z = radius * Math.cos(THREE.MathUtils.degToRad(theta));\n      camera.lookAt(scene.position);\n      camera.updateMatrixWorld();\n      raycaster.setFromCamera(pointer, camera);\n      const intersects = raycaster.intersectObjects(parentTransform.children, true);\n      renderer.render(scene, camera);\n    };\n\n    // ------- INIT -----------\n    if (containerRef.current) {\n      container = containerRef.current;\n      camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 10000);\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xF4F1EC);\n      const lineGeometry = new THREE.BufferGeometry();\n      const points = [];\n      const point = new THREE.Vector3();\n      const direction = new THREE.Vector3();\n      for (let i = 0; i < 50; i++) {\n        direction.x += Math.random() - 0.5;\n        direction.y += Math.random() - 0.5;\n        direction.z += Math.random() - 0.5;\n        direction.normalize().multiplyScalar(10);\n        point.add(direction);\n        points.push(point.x, point.y, point.z);\n      }\n      lineGeometry.setAttribute(\"position\", new THREE.Float32BufferAttribute(points, 3));\n      parentTransform = new THREE.Object3D();\n      for (let i = 0; i < 50; i++) {\n        const lineMaterial = new THREE.LineBasicMaterial({\n          color: Math.random() * 0xffffff\n        });\n        const object = Math.random() > 0.5 ? new THREE.Line(lineGeometry, lineMaterial) : new THREE.LineSegments(lineGeometry, lineMaterial);\n        object.position.set(Math.random() * 400 - 200, Math.random() * 400 - 200, Math.random() * 400 - 200);\n        object.rotation.set(Math.random() * Math.PI * 2, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\n        object.scale.set(Math.random() + 0.5, Math.random() + 0.5, Math.random() + 0.5);\n        parentTransform.add(object);\n      }\n      scene.add(parentTransform);\n      raycaster = new THREE.Raycaster();\n      raycaster.params.Line.threshold = 3;\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      container.appendChild(renderer.domElement);\n      stats = new Stats();\n      container.appendChild(stats.dom);\n      window.addEventListener(\"resize\", onWindowResize);\n      document.addEventListener(\"pointermove\", onPointerMove);\n      animate();\n    }\n    return () => {\n      window.removeEventListener(\"resize\", onWindowResize);\n      document.removeEventListener(\"pointermove\", onPointerMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"absolute inset-0 z-0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 10\n  }, this);\n};\n_s(InteractiveLines, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = InteractiveLines;\nexport default InteractiveLines;\nvar _c;\n$RefreshReg$(_c, \"InteractiveLines\");","map":{"version":3,"names":["useEffect","useRef","THREE","Stats","jsxDEV","_jsxDEV","InteractiveLines","_s","containerRef","container","camera","scene","raycaster","renderer","parentTransform","stats","theta","pointer","Vector2","radius","onPointerMove","event","x","clientX","window","innerWidth","y","clientY","innerHeight","onWindowResize","aspect","updateProjectionMatrix","setSize","animate","requestAnimationFrame","render","update","position","Math","sin","MathUtils","degToRad","z","cos","lookAt","updateMatrixWorld","setFromCamera","intersects","intersectObjects","children","current","PerspectiveCamera","Scene","background","Color","lineGeometry","BufferGeometry","points","point","Vector3","direction","i","random","normalize","multiplyScalar","add","push","setAttribute","Float32BufferAttribute","Object3D","lineMaterial","LineBasicMaterial","color","object","Line","LineSegments","set","rotation","PI","scale","Raycaster","params","threshold","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","appendChild","domElement","dom","addEventListener","document","removeEventListener","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/portfolio/portfolio-site/src/components/InteractiveLines.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Stats from \"three/examples/jsm/libs/stats.module\";\r\n\r\nconst InteractiveLines = () => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    let container: HTMLDivElement;\r\n    let camera: THREE.PerspectiveCamera;\r\n    let scene: THREE.Scene;\r\n    let raycaster: THREE.Raycaster;\r\n    let renderer: THREE.WebGLRenderer;\r\n    let parentTransform: THREE.Object3D;\r\n    let stats: Stats;\r\n    let theta = 0;\r\n\r\n    const pointer = new THREE.Vector2();\r\n    const radius = 100;\r\n\r\n    const onPointerMove = (event: PointerEvent) => {\r\n      pointer.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n      pointer.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n    };\r\n\r\n    const onWindowResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      render();\r\n      stats.update();\r\n    };\r\n\r\n    const render = () => {\r\n      theta += 0.1;\r\n      camera.position.x = radius * Math.sin(THREE.MathUtils.degToRad(theta));\r\n      camera.position.y = radius * Math.sin(THREE.MathUtils.degToRad(theta));\r\n      camera.position.z = radius * Math.cos(THREE.MathUtils.degToRad(theta));\r\n      camera.lookAt(scene.position);\r\n      camera.updateMatrixWorld();\r\n\r\n      raycaster.setFromCamera(pointer, camera);\r\n      const intersects = raycaster.intersectObjects(parentTransform.children, true);\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    // ------- INIT -----------\r\n    if (containerRef.current) {\r\n      container = containerRef.current;\r\n\r\n      camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 10000);\r\n      scene = new THREE.Scene();\r\n      scene.background = new THREE.Color(0xF4F1EC);\r\n\r\n      const lineGeometry = new THREE.BufferGeometry();\r\n      const points: number[] = [];\r\n      const point = new THREE.Vector3();\r\n      const direction = new THREE.Vector3();\r\n\r\n      for (let i = 0; i < 50; i++) {\r\n        direction.x += Math.random() - 0.5;\r\n        direction.y += Math.random() - 0.5;\r\n        direction.z += Math.random() - 0.5;\r\n        direction.normalize().multiplyScalar(10);\r\n        point.add(direction);\r\n        points.push(point.x, point.y, point.z);\r\n      }\r\n\r\n      lineGeometry.setAttribute(\"position\", new THREE.Float32BufferAttribute(points, 3));\r\n\r\n      parentTransform = new THREE.Object3D();\r\n\r\n      for (let i = 0; i < 50; i++) {\r\n        const lineMaterial = new THREE.LineBasicMaterial({ color: Math.random() * 0xffffff });\r\n        const object =\r\n          Math.random() > 0.5\r\n            ? new THREE.Line(lineGeometry, lineMaterial)\r\n            : new THREE.LineSegments(lineGeometry, lineMaterial);\r\n\r\n        object.position.set(Math.random() * 400 - 200, Math.random() * 400 - 200, Math.random() * 400 - 200);\r\n        object.rotation.set(Math.random() * Math.PI * 2, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\r\n        object.scale.set(Math.random() + 0.5, Math.random() + 0.5, Math.random() + 0.5);\r\n        parentTransform.add(object);\r\n      }\r\n\r\n      scene.add(parentTransform);\r\n\r\n      raycaster = new THREE.Raycaster();\r\n      raycaster.params.Line.threshold = 3;\r\n\r\n      renderer = new THREE.WebGLRenderer({ antialias: true });\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n      container.appendChild(renderer.domElement);\r\n\r\n      stats = new Stats();\r\n      container.appendChild(stats.dom);\r\n\r\n      window.addEventListener(\"resize\", onWindowResize);\r\n      document.addEventListener(\"pointermove\", onPointerMove);\r\n      animate();\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onWindowResize);\r\n      document.removeEventListener(\"pointermove\", onPointerMove);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={containerRef} className=\"absolute inset-0 z-0\" />;\r\n};\r\n\r\nexport default InteractiveLines;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}