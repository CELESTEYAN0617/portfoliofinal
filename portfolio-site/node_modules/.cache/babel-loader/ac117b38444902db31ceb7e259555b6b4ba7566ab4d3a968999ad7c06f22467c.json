{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\portfolio-site\\\\src\\\\components\\\\InteractiveLines.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport Stats from \"three/examples/jsm/libs/stats.module\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveLines = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    let container;\n    let camera;\n    let scene;\n    let raycaster;\n    let renderer;\n    let parentTransform;\n    let stats;\n    let theta = 0;\n    const pointer = new THREE.Vector2();\n    const radius = 100;\n    const onPointerMove = event => {\n      pointer.x = event.clientX / window.innerWidth * 2 - 1;\n      pointer.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    const animate = () => {\n      requestAnimationFrame(animate);\n      render();\n      stats.update();\n    };\n    const render = () => {\n      theta += 0.1;\n      camera.position.x = radius * Math.sin(THREE.MathUtils.degToRad(theta));\n      camera.position.y = radius * Math.sin(THREE.MathUtils.degToRad(theta));\n      camera.position.z = radius * Math.cos(THREE.MathUtils.degToRad(theta));\n      camera.lookAt(scene.position);\n      camera.updateMatrixWorld();\n      raycaster.setFromCamera(pointer, camera);\n      const intersects = raycaster.intersectObjects(parentTransform.children, true);\n      renderer.render(scene, camera);\n    };\n\n    // ------- INIT -----------\n    if (containerRef.current) {\n      container = containerRef.current;\n      camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 10000);\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xF4F1EC);\n      const lineGeometry = new THREE.BufferGeometry();\n      const points = [];\n      const point = new THREE.Vector3();\n      const direction = new THREE.Vector3();\n      for (let i = 0; i < 50; i++) {\n        direction.x += Math.random() - 0.5;\n        direction.y += Math.random() - 0.5;\n        direction.z += Math.random() - 0.5;\n        direction.normalize().multiplyScalar(10);\n        point.add(direction);\n        points.push(point.x, point.y, point.z);\n      }\n      lineGeometry.setAttribute(\"position\", new THREE.Float32BufferAttribute(points, 3));\n      parentTransform = new THREE.Object3D();\n      for (let i = 0; i < 50; i++) {\n        const lineMaterial = new THREE.LineBasicMaterial({\n          color: new THREE.Color('#B2FFFF'),\n          linewidth: 1\n        });\n        const object = Math.random() > 0.5 ? new THREE.Line(lineGeometry, lineMaterial) : new THREE.LineSegments(lineGeometry, lineMaterial);\n        const scale = 0.5 + Math.random() * 1.5;\n        object.scale.set(scale, scale, scale);\n        object.position.set(Math.random() * 400 - 200, Math.random() * 400 - 200, Math.random() * 400 - 200);\n        object.rotation.set(Math.random() * Math.PI * 2, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\n        parentTransform.add(object);\n      }\n      scene.add(parentTransform);\n      raycaster = new THREE.Raycaster();\n      raycaster.params.Line.threshold = 3;\n      renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        powerPreference: \"high-performance\"\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      container.appendChild(renderer.domElement);\n      stats = new Stats();\n      container.appendChild(stats.dom);\n      window.addEventListener(\"resize\", onWindowResize);\n      document.addEventListener(\"pointermove\", onPointerMove);\n      animate();\n    }\n    return () => {\n      window.removeEventListener(\"resize\", onWindowResize);\n      document.removeEventListener(\"pointermove\", onPointerMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"absolute inset-0 z-0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 10\n  }, this);\n};\n_s(InteractiveLines, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = InteractiveLines;\nexport default InteractiveLines;\nvar _c;\n$RefreshReg$(_c, \"InteractiveLines\");","map":{"version":3,"names":["useEffect","useRef","THREE","Stats","jsxDEV","_jsxDEV","InteractiveLines","_s","containerRef","container","camera","scene","raycaster","renderer","parentTransform","stats","theta","pointer","Vector2","radius","onPointerMove","event","x","clientX","window","innerWidth","y","clientY","innerHeight","onWindowResize","aspect","updateProjectionMatrix","setSize","animate","requestAnimationFrame","render","update","position","Math","sin","MathUtils","degToRad","z","cos","lookAt","updateMatrixWorld","setFromCamera","intersects","intersectObjects","children","current","PerspectiveCamera","Scene","background","Color","lineGeometry","BufferGeometry","points","point","Vector3","direction","i","random","normalize","multiplyScalar","add","push","setAttribute","Float32BufferAttribute","Object3D","lineMaterial","LineBasicMaterial","color","linewidth","object","Line","LineSegments","scale","set","rotation","PI","Raycaster","params","threshold","WebGLRenderer","antialias","powerPreference","setPixelRatio","devicePixelRatio","appendChild","domElement","dom","addEventListener","document","removeEventListener","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/portfolio/portfolio-site/src/components/InteractiveLines.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport Stats from \"three/examples/jsm/libs/stats.module\";\n\nconst InteractiveLines = () => {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    let container: HTMLDivElement;\n    let camera: THREE.PerspectiveCamera;\n    let scene: THREE.Scene;\n    let raycaster: THREE.Raycaster;\n    let renderer: THREE.WebGLRenderer;\n    let parentTransform: THREE.Object3D;\n    let stats: Stats;\n    let theta = 0;\n\n    const pointer = new THREE.Vector2();\n    const radius = 100;\n\n    const onPointerMove = (event: PointerEvent) => {\n      pointer.x = (event.clientX / window.innerWidth) * 2 - 1;\n      pointer.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      render();\n      stats.update();\n    };\n\n    const render = () => {\n      theta += 0.1;\n      camera.position.x = radius * Math.sin(THREE.MathUtils.degToRad(theta));\n      camera.position.y = radius * Math.sin(THREE.MathUtils.degToRad(theta));\n      camera.position.z = radius * Math.cos(THREE.MathUtils.degToRad(theta));\n      camera.lookAt(scene.position);\n      camera.updateMatrixWorld();\n\n      raycaster.setFromCamera(pointer, camera);\n      const intersects = raycaster.intersectObjects(parentTransform.children, true);\n\n      renderer.render(scene, camera);\n    };\n\n    // ------- INIT -----------\n    if (containerRef.current) {\n      container = containerRef.current;\n\n      camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 10000);\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xF4F1EC);\n\n      const lineGeometry = new THREE.BufferGeometry();\n      const points: number[] = [];\n      const point = new THREE.Vector3();\n      const direction = new THREE.Vector3();\n\n      for (let i = 0; i < 50; i++) {\n        direction.x += Math.random() - 0.5;\n        direction.y += Math.random() - 0.5;\n        direction.z += Math.random() - 0.5;\n        direction.normalize().multiplyScalar(10);\n        point.add(direction);\n        points.push(point.x, point.y, point.z);\n      }\n\n      lineGeometry.setAttribute(\"position\", new THREE.Float32BufferAttribute(points, 3));\n\n      parentTransform = new THREE.Object3D();\n\n      for (let i = 0; i < 50; i++) {\n        const lineMaterial = new THREE.LineBasicMaterial({ \n          color: new THREE.Color('#B2FFFF'),\n          linewidth: 1\n        });\n        const object =\n          Math.random() > 0.5\n            ? new THREE.Line(lineGeometry, lineMaterial)\n            : new THREE.LineSegments(lineGeometry, lineMaterial);\n\n        const scale = 0.5 + Math.random() * 1.5;\n        object.scale.set(scale, scale, scale);\n        object.position.set(Math.random() * 400 - 200, Math.random() * 400 - 200, Math.random() * 400 - 200);\n        object.rotation.set(Math.random() * Math.PI * 2, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\n        parentTransform.add(object);\n      }\n\n      scene.add(parentTransform);\n\n      raycaster = new THREE.Raycaster();\n      raycaster.params.Line.threshold = 3;\n\n      renderer = new THREE.WebGLRenderer({ \n        antialias: true,\n        powerPreference: \"high-performance\"\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      container.appendChild(renderer.domElement);\n\n      stats = new Stats();\n      container.appendChild(stats.dom);\n\n      window.addEventListener(\"resize\", onWindowResize);\n      document.addEventListener(\"pointermove\", onPointerMove);\n      animate();\n    }\n\n    return () => {\n      window.removeEventListener(\"resize\", onWindowResize);\n      document.removeEventListener(\"pointermove\", onPointerMove);\n    };\n  }, []);\n\n  return <div ref={containerRef} className=\"absolute inset-0 z-0\" />;\n};\n\nexport default InteractiveLines;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}