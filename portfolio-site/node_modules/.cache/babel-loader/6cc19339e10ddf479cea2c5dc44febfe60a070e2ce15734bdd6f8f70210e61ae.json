{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\portfolio-site\\\\src\\\\components\\\\InteractiveLines-p.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport Stats from \"three/examples/jsm/libs/stats.module\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveLines = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    let container;\n    let camera;\n    let scene;\n    let renderer;\n    let parentTransform;\n    let stats;\n    let lines = [];\n\n    // PawMeet theme colors\n    const themeColors = {\n      primary: 0xFFB6C1,\n      // Light pink\n      secondary: 0x87CEEB,\n      // Sky blue\n      accent: 0xFFD700,\n      // Gold\n      background: 0xF8F8FF // Ghost white\n    };\n    const onWindowResize = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      camera.left = -width / 2;\n      camera.right = width / 2;\n      camera.top = height / 2;\n      camera.bottom = -height / 2;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    const animate = () => {\n      requestAnimationFrame(animate);\n      render();\n      stats.update();\n    };\n    const render = () => {\n      lines.forEach((line, index) => {\n        const material = line.material;\n        const time = Date.now() * 0.001;\n\n        // Subtle color animation\n        const hue = (time * 0.1 + index * 0.1) % 1;\n        material.color.setHSL(hue, 0.5, 0.6);\n\n        // Gentle movement\n        line.position.x = Math.sin(time + index) * 10;\n        line.position.y = Math.cos(time + index) * 10;\n\n        // Subtle rotation\n        line.rotation.z = Math.sin(time * 0.5 + index) * 0.1;\n      });\n      renderer.render(scene, camera);\n    };\n    if (containerRef.current) {\n      container = containerRef.current;\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      camera = new THREE.OrthographicCamera(-width / 2, width / 2, height / 2, -height / 2, 1, 1000);\n      camera.position.z = 100;\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(themeColors.background);\n      parentTransform = new THREE.Object3D();\n      scene.add(parentTransform);\n\n      // Create lines\n      for (let i = 0; i < 20; i++) {\n        const points = [];\n        const numPoints = 5;\n        const spread = 100;\n        for (let j = 0; j < numPoints; j++) {\n          points.push(new THREE.Vector2((Math.random() - 0.5) * spread, (Math.random() - 0.5) * spread));\n        }\n        const geometry = new THREE.BufferGeometry().setFromPoints(points);\n        const material = new THREE.LineBasicMaterial({\n          color: themeColors.primary,\n          transparent: true,\n          opacity: 0.6\n        });\n        const line = new THREE.Line(geometry, material);\n        line.position.set((Math.random() - 0.5) * width, (Math.random() - 0.5) * height, 0);\n        parentTransform.add(line);\n        lines.push(line);\n      }\n      renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(width, height);\n      container.appendChild(renderer.domElement);\n      stats = new Stats();\n      container.appendChild(stats.dom);\n      window.addEventListener(\"resize\", onWindowResize);\n      animate();\n    }\n    return () => {\n      window.removeEventListener(\"resize\", onWindowResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"absolute inset-0 z-0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 10\n  }, this);\n};\n_s(InteractiveLines, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = InteractiveLines;\nexport default InteractiveLines;\nvar _c;\n$RefreshReg$(_c, \"InteractiveLines\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","Stats","jsxDEV","_jsxDEV","InteractiveLines","_s","containerRef","container","camera","scene","renderer","parentTransform","stats","lines","themeColors","primary","secondary","accent","background","onWindowResize","width","window","innerWidth","height","innerHeight","left","right","top","bottom","updateProjectionMatrix","setSize","animate","requestAnimationFrame","render","update","forEach","line","index","material","time","Date","now","hue","color","setHSL","position","x","Math","sin","y","cos","rotation","z","current","OrthographicCamera","Scene","Color","Object3D","add","i","points","numPoints","spread","j","push","Vector2","random","geometry","BufferGeometry","setFromPoints","LineBasicMaterial","transparent","opacity","Line","set","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","appendChild","domElement","dom","addEventListener","removeEventListener","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/portfolio/portfolio-site/src/components/InteractiveLines-p.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport Stats from \"three/examples/jsm/libs/stats.module\";\n\nconst InteractiveLines: React.FC = () => {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    let container: HTMLDivElement;\n    let camera: THREE.OrthographicCamera;\n    let scene: THREE.Scene;\n    let renderer: THREE.WebGLRenderer;\n    let parentTransform: THREE.Object3D;\n    let stats: Stats;\n    let lines: THREE.Line[] = [];\n\n    // PawMeet theme colors\n    const themeColors = {\n      primary: 0xFFB6C1,    // Light pink\n      secondary: 0x87CEEB,  // Sky blue\n      accent: 0xFFD700,     // Gold\n      background: 0xF8F8FF  // Ghost white\n    };\n\n    const onWindowResize = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      camera.left = -width / 2;\n      camera.right = width / 2;\n      camera.top = height / 2;\n      camera.bottom = -height / 2;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      render();\n      stats.update();\n    };\n\n    const render = () => {\n      lines.forEach((line, index) => {\n        const material = line.material as THREE.LineBasicMaterial;\n        const time = Date.now() * 0.001;\n        \n        // Subtle color animation\n        const hue = (time * 0.1 + index * 0.1) % 1;\n        material.color.setHSL(hue, 0.5, 0.6);\n        \n        // Gentle movement\n        line.position.x = Math.sin(time + index) * 10;\n        line.position.y = Math.cos(time + index) * 10;\n        \n        // Subtle rotation\n        line.rotation.z = Math.sin(time * 0.5 + index) * 0.1;\n      });\n\n      renderer.render(scene, camera);\n    };\n\n    if (containerRef.current) {\n      container = containerRef.current;\n\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n\n      camera = new THREE.OrthographicCamera(\n        -width / 2,\n        width / 2,\n        height / 2,\n        -height / 2,\n        1,\n        1000\n      );\n      camera.position.z = 100;\n\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(themeColors.background);\n\n      parentTransform = new THREE.Object3D();\n      scene.add(parentTransform);\n\n      // Create lines\n      for (let i = 0; i < 20; i++) {\n        const points: THREE.Vector2[] = [];\n        const numPoints = 5;\n        const spread = 100;\n\n        for (let j = 0; j < numPoints; j++) {\n          points.push(\n            new THREE.Vector2(\n              (Math.random() - 0.5) * spread,\n              (Math.random() - 0.5) * spread\n            )\n          );\n        }\n\n        const geometry = new THREE.BufferGeometry().setFromPoints(points);\n        const material = new THREE.LineBasicMaterial({\n          color: themeColors.primary,\n          transparent: true,\n          opacity: 0.6\n        });\n\n        const line = new THREE.Line(geometry, material);\n        line.position.set(\n          (Math.random() - 0.5) * width,\n          (Math.random() - 0.5) * height,\n          0\n        );\n\n        parentTransform.add(line);\n        lines.push(line);\n      }\n\n      renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(width, height);\n      container.appendChild(renderer.domElement);\n\n      stats = new Stats();\n      container.appendChild(stats.dom);\n\n      window.addEventListener(\"resize\", onWindowResize);\n      animate();\n    }\n\n    return () => {\n      window.removeEventListener(\"resize\", onWindowResize);\n    };\n  }, []);\n\n  return <div ref={containerRef} className=\"absolute inset-0 z-0\" />;\n};\n\nexport default InteractiveLines;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}