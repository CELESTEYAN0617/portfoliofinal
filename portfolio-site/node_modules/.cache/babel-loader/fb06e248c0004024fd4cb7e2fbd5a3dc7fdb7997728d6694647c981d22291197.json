{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\portfolio-site\\\\src\\\\components\\\\InteractiveLines-pro.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveLines = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const mousePos = useRef({\n    x: -1000,\n    y: -1000\n  }); // Start mouse position off-screen\n  const points = useRef([]);\n  const animationFrameId = useRef();\n  const time = useRef(0);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    const setCanvasSize = () => {\n      canvas.width = canvas.offsetWidth;\n      canvas.height = canvas.offsetHeight;\n    };\n    setCanvasSize();\n    window.addEventListener('resize', setCanvasSize);\n\n    // Initialize grid points\n    const initGrid = () => {\n      const gridSize = 25; // Smaller grid size\n      const cols = Math.floor(canvas.width / gridSize) + 2;\n      const rows = Math.floor(canvas.height / gridSize) + 2;\n      points.current = [];\n      for (let i = 0; i < cols; i++) {\n        const col = [];\n        for (let j = 0; j < rows; j++) {\n          col.push({\n            x: i * gridSize,\n            y: j * gridSize,\n            baseX: i * gridSize,\n            baseY: j * gridSize\n          });\n        }\n        points.current.push(col);\n      }\n    };\n    initGrid();\n\n    // Mouse move handler\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n      mousePos.current = {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top\n      };\n    };\n\n    // Mouse leave handler\n    const handleMouseLeave = () => {\n      mousePos.current = {\n        x: -1000,\n        y: -1000\n      }; // Move mouse position off-screen\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n\n    // Animation\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Set line style\n      ctx.strokeStyle = '#4A90E2';\n      ctx.lineWidth = 0.5;\n\n      // Update points\n      for (let i = 0; i < points.current.length; i++) {\n        for (let j = 0; j < points.current[i].length; j++) {\n          const point = points.current[i][j];\n          const dx = mousePos.current.x - point.baseX;\n          const dy = mousePos.current.y - point.baseY;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          // Strong mouse interaction\n          const maxDistance = 100; // Smaller radius of influence\n          const force = Math.max(0, 1 - distance / maxDistance);\n\n          // Calculate displacement\n          const angle = Math.atan2(dy, dx);\n          const displacement = force * 30; // Stronger effect\n\n          point.x = point.baseX + Math.cos(angle) * displacement;\n          point.y = point.baseY + Math.sin(angle) * displacement;\n        }\n      }\n\n      // Draw vertical lines\n      for (let i = 0; i < points.current.length; i++) {\n        ctx.beginPath();\n        ctx.moveTo(points.current[i][0].x, points.current[i][0].y);\n        for (let j = 1; j < points.current[i].length; j++) {\n          const point = points.current[i][j];\n          ctx.lineTo(point.x, point.y);\n        }\n        ctx.stroke();\n      }\n\n      // Draw horizontal lines\n      for (let j = 0; j < points.current[0].length; j++) {\n        ctx.beginPath();\n        ctx.moveTo(points.current[0][j].x, points.current[0][j].y);\n        for (let i = 1; i < points.current.length; i++) {\n          const point = points.current[i][j];\n          ctx.lineTo(point.x, point.y);\n        }\n        ctx.stroke();\n      }\n      animationFrameId.current = requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', setCanvasSize);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n      if (animationFrameId.current) {\n        cancelAnimationFrame(animationFrameId.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      width: '100%',\n      height: '100%',\n      background: '#F4F1EC'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveLines, \"DmiGsj0BlRtKmQ4MsYjbz7ya5lo=\");\n_c = InteractiveLines;\nexport default InteractiveLines;\nvar _c;\n$RefreshReg$(_c, \"InteractiveLines\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","InteractiveLines","_s","canvasRef","mousePos","x","y","points","animationFrameId","time","canvas","current","ctx","getContext","setCanvasSize","width","offsetWidth","height","offsetHeight","window","addEventListener","initGrid","gridSize","cols","Math","floor","rows","i","col","j","push","baseX","baseY","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseLeave","animate","clearRect","strokeStyle","lineWidth","length","point","dx","dy","distance","sqrt","maxDistance","force","max","angle","atan2","displacement","cos","sin","beginPath","moveTo","lineTo","stroke","requestAnimationFrame","removeEventListener","cancelAnimationFrame","ref","style","background","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/portfolio/portfolio-site/src/components/InteractiveLines-pro.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\ninterface Point {\r\n  x: number;\r\n  y: number;\r\n  baseX: number;\r\n  baseY: number;\r\n}\r\n\r\nconst InteractiveLines: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const mousePos = useRef({ x: -1000, y: -1000 }); // Start mouse position off-screen\r\n  const points = useRef<Point[][]>([]);\r\n  const animationFrameId = useRef<number>();\r\n  const time = useRef(0);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    // Set canvas size\r\n    const setCanvasSize = () => {\r\n      canvas.width = canvas.offsetWidth;\r\n      canvas.height = canvas.offsetHeight;\r\n    };\r\n    setCanvasSize();\r\n    window.addEventListener('resize', setCanvasSize);\r\n\r\n    // Initialize grid points\r\n    const initGrid = () => {\r\n      const gridSize = 25; // Smaller grid size\r\n      const cols = Math.floor(canvas.width / gridSize) + 2;\r\n      const rows = Math.floor(canvas.height / gridSize) + 2;\r\n\r\n      points.current = [];\r\n      for (let i = 0; i < cols; i++) {\r\n        const col: Point[] = [];\r\n        for (let j = 0; j < rows; j++) {\r\n          col.push({\r\n            x: i * gridSize,\r\n            y: j * gridSize,\r\n            baseX: i * gridSize,\r\n            baseY: j * gridSize,\r\n          });\r\n        }\r\n        points.current.push(col);\r\n      }\r\n    };\r\n    initGrid();\r\n\r\n    // Mouse move handler\r\n    const handleMouseMove = (e: MouseEvent) => {\r\n      const rect = canvas.getBoundingClientRect();\r\n      mousePos.current = {\r\n        x: e.clientX - rect.left,\r\n        y: e.clientY - rect.top\r\n      };\r\n    };\r\n\r\n    // Mouse leave handler\r\n    const handleMouseLeave = () => {\r\n      mousePos.current = { x: -1000, y: -1000 }; // Move mouse position off-screen\r\n    };\r\n\r\n    canvas.addEventListener('mousemove', handleMouseMove);\r\n    canvas.addEventListener('mouseleave', handleMouseLeave);\r\n\r\n    // Animation\r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      // Set line style\r\n      ctx.strokeStyle = '#4A90E2';\r\n      ctx.lineWidth = 0.5;\r\n\r\n      // Update points\r\n      for (let i = 0; i < points.current.length; i++) {\r\n        for (let j = 0; j < points.current[i].length; j++) {\r\n          const point = points.current[i][j];\r\n          const dx = mousePos.current.x - point.baseX;\r\n          const dy = mousePos.current.y - point.baseY;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n          \r\n          // Strong mouse interaction\r\n          const maxDistance = 100; // Smaller radius of influence\r\n          const force = Math.max(0, 1 - distance / maxDistance);\r\n          \r\n          // Calculate displacement\r\n          const angle = Math.atan2(dy, dx);\r\n          const displacement = force * 30; // Stronger effect\r\n          \r\n          point.x = point.baseX + Math.cos(angle) * displacement;\r\n          point.y = point.baseY + Math.sin(angle) * displacement;\r\n        }\r\n      }\r\n\r\n      // Draw vertical lines\r\n      for (let i = 0; i < points.current.length; i++) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(points.current[i][0].x, points.current[i][0].y);\r\n        for (let j = 1; j < points.current[i].length; j++) {\r\n          const point = points.current[i][j];\r\n          ctx.lineTo(point.x, point.y);\r\n        }\r\n        ctx.stroke();\r\n      }\r\n\r\n      // Draw horizontal lines\r\n      for (let j = 0; j < points.current[0].length; j++) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(points.current[0][j].x, points.current[0][j].y);\r\n        for (let i = 1; i < points.current.length; i++) {\r\n          const point = points.current[i][j];\r\n          ctx.lineTo(point.x, point.y);\r\n        }\r\n        ctx.stroke();\r\n      }\r\n\r\n      animationFrameId.current = requestAnimationFrame(animate);\r\n    };\r\n    animate();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', setCanvasSize);\r\n      canvas.removeEventListener('mousemove', handleMouseMove);\r\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\r\n      if (animationFrameId.current) {\r\n        cancelAnimationFrame(animationFrameId.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        background: '#F4F1EC',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InteractiveLines;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}