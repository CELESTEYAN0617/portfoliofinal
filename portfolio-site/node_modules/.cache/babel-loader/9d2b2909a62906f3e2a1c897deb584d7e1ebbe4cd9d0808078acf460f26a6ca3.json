{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\portfolio-site\\\\src\\\\components\\\\InteractiveLines.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport Stats from \"three/examples/jsm/libs/stats.module\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveLines = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    let container;\n    let camera;\n    let scene;\n    let raycaster;\n    let renderer;\n    let parentTransform;\n    let sphereInter;\n    let stats;\n    let theta = 0;\n    const pointer = new THREE.Vector2();\n    const radius = 100;\n    const onPointerMove = event => {\n      pointer.x = event.clientX / window.innerWidth * 2 - 1;\n      pointer.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    const animate = () => {\n      requestAnimationFrame(animate);\n      render();\n      stats.update();\n    };\n    const render = () => {\n      theta += 0.1;\n      camera.position.x = radius * Math.sin(THREE.MathUtils.degToRad(theta));\n      camera.position.y = radius * Math.sin(THREE.MathUtils.degToRad(theta));\n      camera.position.z = radius * Math.cos(THREE.MathUtils.degToRad(theta));\n      camera.lookAt(scene.position);\n      camera.updateMatrixWorld();\n      raycaster.setFromCamera(pointer, camera);\n      const intersects = raycaster.intersectObjects(parentTransform.children, true);\n      if (intersects.length > 0) {\n        sphereInter.visible = true;\n        sphereInter.position.copy(intersects[0].point);\n      } else {\n        sphereInter.visible = false;\n      }\n      renderer.render(scene, camera);\n    };\n\n    // ------- INIT -----------\n    if (containerRef.current) {\n      container = containerRef.current;\n      camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 10000);\n      scene = new THREE.Scene();\n      scene.background = new THREE.Color(0xf0f0f0);\n      const geometry = new THREE.SphereGeometry(5);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0xff0000\n      });\n      sphereInter = new THREE.Mesh(geometry, material);\n      sphereInter.visible = false;\n      scene.add(sphereInter);\n      const lineGeometry = new THREE.BufferGeometry();\n      const points = [];\n      const point = new THREE.Vector3();\n      const direction = new THREE.Vector3();\n      for (let i = 0; i < 50; i++) {\n        direction.x += Math.random() - 0.5;\n        direction.y += Math.random() - 0.5;\n        direction.z += Math.random() - 0.5;\n        direction.normalize().multiplyScalar(10);\n        point.add(direction);\n        points.push(point.x, point.y, point.z);\n      }\n      lineGeometry.setAttribute(\"position\", new THREE.Float32BufferAttribute(points, 3));\n      parentTransform = new THREE.Object3D();\n      for (let i = 0; i < 50; i++) {\n        const lineMaterial = new THREE.LineBasicMaterial({\n          color: Math.random() * 0xffffff\n        });\n        const object = Math.random() > 0.5 ? new THREE.Line(lineGeometry, lineMaterial) : new THREE.LineSegments(lineGeometry, lineMaterial);\n        object.position.set(Math.random() * 400 - 200, Math.random() * 400 - 200, Math.random() * 400 - 200);\n        object.rotation.set(Math.random() * Math.PI * 2, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\n        object.scale.set(Math.random() + 0.5, Math.random() + 0.5, Math.random() + 0.5);\n        parentTransform.add(object);\n      }\n      scene.add(parentTransform);\n      raycaster = new THREE.Raycaster();\n      raycaster.params.Line.threshold = 3;\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      container.appendChild(renderer.domElement);\n      stats = new Stats();\n      container.appendChild(stats.dom);\n      window.addEventListener(\"resize\", onWindowResize);\n      document.addEventListener(\"pointermove\", onPointerMove);\n      animate();\n    }\n    return () => {\n      window.removeEventListener(\"resize\", onWindowResize);\n      document.removeEventListener(\"pointermove\", onPointerMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"absolute inset-0 z-0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 10\n  }, this);\n};\n_s(InteractiveLines, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = InteractiveLines;\nexport default InteractiveLines;\nvar _c;\n$RefreshReg$(_c, \"InteractiveLines\");","map":{"version":3,"names":["useEffect","useRef","THREE","Stats","jsxDEV","_jsxDEV","InteractiveLines","_s","containerRef","container","camera","scene","raycaster","renderer","parentTransform","sphereInter","stats","theta","pointer","Vector2","radius","onPointerMove","event","x","clientX","window","innerWidth","y","clientY","innerHeight","onWindowResize","aspect","updateProjectionMatrix","setSize","animate","requestAnimationFrame","render","update","position","Math","sin","MathUtils","degToRad","z","cos","lookAt","updateMatrixWorld","setFromCamera","intersects","intersectObjects","children","length","visible","copy","point","current","PerspectiveCamera","Scene","background","Color","geometry","SphereGeometry","material","MeshBasicMaterial","color","Mesh","add","lineGeometry","BufferGeometry","points","Vector3","direction","i","random","normalize","multiplyScalar","push","setAttribute","Float32BufferAttribute","Object3D","lineMaterial","LineBasicMaterial","object","Line","LineSegments","set","rotation","PI","scale","Raycaster","params","threshold","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","appendChild","domElement","dom","addEventListener","document","removeEventListener","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/portfolio/portfolio-site/src/components/InteractiveLines.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Stats from \"three/examples/jsm/libs/stats.module\";\r\n\r\nconst InteractiveLines = () => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    let container: HTMLDivElement;\r\n    let camera: THREE.PerspectiveCamera;\r\n    let scene: THREE.Scene;\r\n    let raycaster: THREE.Raycaster;\r\n    let renderer: THREE.WebGLRenderer;\r\n    let parentTransform: THREE.Object3D;\r\n    let sphereInter: THREE.Mesh;\r\n    let stats: Stats;\r\n    let theta = 0;\r\n\r\n    const pointer = new THREE.Vector2();\r\n    const radius = 100;\r\n\r\n    const onPointerMove = (event: PointerEvent) => {\r\n      pointer.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n      pointer.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n    };\r\n\r\n    const onWindowResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      render();\r\n      stats.update();\r\n    };\r\n\r\n    const render = () => {\r\n      theta += 0.1;\r\n      camera.position.x = radius * Math.sin(THREE.MathUtils.degToRad(theta));\r\n      camera.position.y = radius * Math.sin(THREE.MathUtils.degToRad(theta));\r\n      camera.position.z = radius * Math.cos(THREE.MathUtils.degToRad(theta));\r\n      camera.lookAt(scene.position);\r\n      camera.updateMatrixWorld();\r\n\r\n      raycaster.setFromCamera(pointer, camera);\r\n      const intersects = raycaster.intersectObjects(parentTransform.children, true);\r\n\r\n      if (intersects.length > 0) {\r\n        sphereInter.visible = true;\r\n        sphereInter.position.copy(intersects[0].point);\r\n      } else {\r\n        sphereInter.visible = false;\r\n      }\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    // ------- INIT -----------\r\n    if (containerRef.current) {\r\n      container = containerRef.current;\r\n\r\n      camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 10000);\r\n      scene = new THREE.Scene();\r\n      scene.background = new THREE.Color(0xf0f0f0);\r\n\r\n      const geometry = new THREE.SphereGeometry(5);\r\n      const material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\r\n      sphereInter = new THREE.Mesh(geometry, material);\r\n      sphereInter.visible = false;\r\n      scene.add(sphereInter);\r\n\r\n      const lineGeometry = new THREE.BufferGeometry();\r\n      const points: number[] = [];\r\n      const point = new THREE.Vector3();\r\n      const direction = new THREE.Vector3();\r\n\r\n      for (let i = 0; i < 50; i++) {\r\n        direction.x += Math.random() - 0.5;\r\n        direction.y += Math.random() - 0.5;\r\n        direction.z += Math.random() - 0.5;\r\n        direction.normalize().multiplyScalar(10);\r\n        point.add(direction);\r\n        points.push(point.x, point.y, point.z);\r\n      }\r\n\r\n      lineGeometry.setAttribute(\"position\", new THREE.Float32BufferAttribute(points, 3));\r\n\r\n      parentTransform = new THREE.Object3D();\r\n\r\n      for (let i = 0; i < 50; i++) {\r\n        const lineMaterial = new THREE.LineBasicMaterial({ color: Math.random() * 0xffffff });\r\n        const object =\r\n          Math.random() > 0.5\r\n            ? new THREE.Line(lineGeometry, lineMaterial)\r\n            : new THREE.LineSegments(lineGeometry, lineMaterial);\r\n\r\n        object.position.set(Math.random() * 400 - 200, Math.random() * 400 - 200, Math.random() * 400 - 200);\r\n        object.rotation.set(Math.random() * Math.PI * 2, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\r\n        object.scale.set(Math.random() + 0.5, Math.random() + 0.5, Math.random() + 0.5);\r\n        parentTransform.add(object);\r\n      }\r\n\r\n      scene.add(parentTransform);\r\n\r\n      raycaster = new THREE.Raycaster();\r\n      raycaster.params.Line.threshold = 3;\r\n\r\n      renderer = new THREE.WebGLRenderer({ antialias: true });\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n      container.appendChild(renderer.domElement);\r\n\r\n      stats = new Stats();\r\n      container.appendChild(stats.dom);\r\n\r\n      window.addEventListener(\"resize\", onWindowResize);\r\n      document.addEventListener(\"pointermove\", onPointerMove);\r\n      animate();\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onWindowResize);\r\n      document.removeEventListener(\"pointermove\", onPointerMove);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={containerRef} className=\"absolute inset-0 z-0\" />;\r\n};\r\n\r\nexport default InteractiveLines;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}